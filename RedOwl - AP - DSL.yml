# Invoice Validation Execution Plan - Domain Specific Language
# Version: 3.2.0
# Last Updated: 2025-05-29

metadata:
  name: "Invoice Validation Execution Plan"
  version: "3.2.0"
  description: "Comprehensive DSL for invoice validation workflow with externalized business configurations"
  schema_version: "3.2"
  created_by: "Finance Automation Team"
  last_modified: "2025-05-29T10:00:00Z"
  usage_context: "AI-driven agentic workflow for automated invoice processing"

# External Configuration Reference
external_config:
  description: "All frequently changing business values stored externally"
  source: "config/business_rules.yaml"
  refresh_interval: "24h"
  includes:
    - "amount_thresholds"
    - "tolerance_percentages"
    - "time_windows"
    - "approval_limits"
    - "vendor_classifications"
    - "discount_rates"
    - "tax_configurations"

# YAML Anchors and References for reusability
references:
  common_fields: &common_fields
    id:
      type: "string"
      required: true
      format: "UUID"
      description: "Unique identifier"
    timestamp:
      type: "timestamp"
      required: true
      format: "ISO8601"
      description: "Creation timestamp"
    version:
      type: "string"
      required: true
      description: "Schema version"
  
  base_acceptance_criteria: &base_acceptance_criteria
    - "All required fields populated"
    - "Data integrity verified"
    - "Audit trail created"
    - "Schema validation passed"
  
  standard_outputs: &standard_outputs
    success:
      status: "completed"
      next_node: "auto"
      data_persisted: true
    partial:
      status: "partial"
      requires_review: true
      next_node: "conditional"
    failure:
      status: "failed"
      retry_allowed: true
      escalation_required: true
    skip:
      status: "skipped"
      reason: "required"
      next_node: "specified"

# Global Execution Context
global_context:
  description: "Runtime context flowing through entire execution"
  doctype_supported:
    - "invoice"
    - "credit_note"
    - "debit_note"
  vendor_categories:
    - "goods_supplier"
    - "service_provider"
    - "contractor"
    - "consultant"
  environment:
    timezone: "UTC"
    date_format: "YYYY-MM-DD"
    currency_default: "${config.base_currency}"
    locale: "en_US"

# Comprehensive Data Models
data_models:
  sop_context:
    fields:
      - name: "context_id"
        type: "string"
        required: true
        format: "UUID"
      - name: "document_type"
        type: "string"
        required: true
        enum: ["invoice", "credit_note"]
      - name: "vendor_context"
        type: "object"
        required: true
        schema:
          vendor_id: "string"
          vendor_category: "string"
          vendor_tier: "string"
          preferred_vendor: "boolean"
          payment_terms_default: "string"
      - name: "org_data"  # Not defined Yet, May contain org-specific data like GL accounts, cost centers, employee roles, etc.
        type: "object"
        required: true
        schema:
          org_id: "string"
          business_unit: "string"
          cost_center: "string"
          approval_hierarchy: "array"
          fiscal_period: "string"
      - name: "initiated_timestamp"
        type: "timestamp"
        required: true
      - name: "sop_version"
        type: "string"
        required: true

  invoice_metadata:
    fields:
      - name: "invoice_id"
        type: "string"
        required: true
        format: "UUID"
      - name: "invoice_number"
        type: "string"
        required: true
      - name: "vendor_id"
        type: "string"
        required: true
      - name: "vendor_name"
        type: "string"
        required: true
      - name: "invoice_date"
        type: "date"
        required: true
      - name: "due_date"
        type: "date"
        required: false
      - name: "currency"
        type: "string"
        required: true
        default: "AUD"
      - name: "total_amount"
        type: "decimal"
        required: true
      - name: "tax_amount"
        type: "decimal"
        required: false
      - name: "subtotal_amount"
        type: "decimal"
        required: true
      - name: "payment_terms"
        type: "string"
        required: false
      - name: "po_number"
        type: "string"
        required: false
      - name: "payment_status" # Need to check if this is needed
        type: "string"
        required: true
        enum: ["pending", "paid", "partially_paid", "overdue"]
      - name: "approval_status"
        type: "string"
        required: true
        enum: ["pending", "approved", "rejected"]
      - name: "extraction_confidence"
        type: "decimal"
        required: true
      - name: "extracted_timestamp"
        type: "timestamp"
        required: true

  line_item:
    fields:
      - name: "line_number"
        type: "integer"
        required: true
      - name: "description"
        type: "string"
        required: true
      - name: "quantity"
        type: "decimal"
        required: false
      - name: "unit_price"
        type: "decimal"
        required: false
      - name: "line_total"
        type: "decimal"
        required: true
      - name: "tax_code"
        type: "string"
        required: false
      - name: "gl_account"
        type: "string"
        required: true
      - name: "cost_center"
        type: "string"
        required: false
      - name: "project_code"
        type: "string"
        required: false

  validation_result:
    fields:
      - name: "validation_id"
        type: "string"
        required: true
      - name: "rule_id"
        type: "string"
        required: true
      - name: "status"
        type: "enum"
        values: ["passed", "failed", "warning"]
        required: true
      - name: "message"
        type: "string"
        required: true
      - name: "policy_reference"
        type: "string"
        required: true
      - name: "severity"
        type: "enum"
        values: ["critical", "high", "medium", "low"]
        required: true
      - name: "timestamp"
        type: "timestamp"
        required: true

  matching_result:
    fields:
      - name: "matching_id"
        type: "string"
        required: true
      - name: "matching_type"
        type: "enum"
        values: ["two_way", "three_way", "contract_based"]
        required: true
      - name: "documents_matched"
        type: "array"
        item_type: "document_reference"
        required: true
      - name: "matching_score"
        type: "decimal"
        required: true
      - name: "variances"
        type: "array"
        item_type: "variance_detail"
        required: false
      - name: "policy_applied"
        type: "string"
        required: true

  document_reference:
    fields:
      - name: "document_type"
        type: "enum"
        values: ["invoice", "purchase_order", "goods_receipt_note", "vendor_contract"]
        required: true
      - name: "document_id"
        type: "string"
        required: true
      - name: "document_number"
        type: "string"
        required: true
      - name: "document_date"
        type: "date"
        required: true

  variance_detail:
    fields:
      - name: "field_name"
        type: "string"
        required: true
      - name: "expected_value"
        type: "string"
        required: true
      - name: "actual_value"
        type: "string"
        required: true
      - name: "variance_amount"
        type: "decimal"
        required: true
      - name: "variance_percentage"
        type: "decimal"
        required: true
      - name: "within_tolerance"
        type: "boolean"
        required: true

  review_assignment:
    fields:
      - name: "reviewer_id"
        type: "string"
        required: true
      - name: "reviewer_role"
        type: "string"
        required: true
      - name: "assignment_type"
        type: "enum"
        values: ["sequential", "parallel"]
        required: true
      - name: "sequence_order"
        type: "integer"
        required: false
      - name: "assigned_timestamp"
        type: "timestamp"
        required: true
      - name: "due_timestamp"
        type: "timestamp"
        required: true


# External System Configurations
external_systems:
  metastore:
    type: "database"
    connection_type: "postgres"
    connection_string: "${env.METASTORE_CONNECTION}"
    schema: "invoice_metadata"
    description: "Primary metadata storage for invoice processing"
    
  document_store:
    type: "object_storage"
    provider: "s3"
    description: "Document binary storage"
    
  knowledge_index:
    type: "search_engine"
    provider: "elasticsearch"
    endpoint: "${env.ELASTIC_ENDPOINT}"
    index_prefix: "invoice_"
    description: "Searchable knowledge base for invoice data"
    
  policy_engine:
    type: "rules_engine"
    provider: "policy_agent"
    endpoint: "${env.POLICY_ENGINE_ENDPOINT}"
    namespace: "tenant.policies"
    description: "Centralized policy management system"

# Policy Framework
policy_framework:
  company_policies:
    description: "Organization-wide business rules"
    location: "${external_config.source}/company_policies.yaml"
    categories:
      tolerance_rules:
        description: "Amount tolerance by invoice value ranges"
        config_ref: "company_policies.tolerance"
      discount_policies:
        description: "Early payment and volume discounts"
        config_ref: "company_policies.discounts"
      bulk_payment_rules:
        description: "Bulk payment eligibility"
        config_ref: "company_policies.bulk_payments"
      delegation_matrix:
        description: "Approval delegation rules"
        config_ref: "company_policies.delegation"

  vendor_policies:
    description: "Vendor-specific agreement terms"
    location: "${external_config.source}/vendor_policies.yaml"
    categories:
      payment_terms:
        description: "Vendor-specific payment terms"
        config_ref: "vendor_policies.payment_terms"
      approval_limits:
        description: "Auto-approval thresholds by vendor"
        config_ref: "vendor_policies.approval_limits"
      special_agreements:
        description: "Custom vendor agreements"
        config_ref: "vendor_policies.special_terms"

accounting_policies:
  description: "Document matching configurations and rules"
  location: "${external_config.source}/accounting_policies.yaml"
  
  matching_types:
    two_way_matching:
      description: "Invoice to Purchase Order matching"
      required_documents:
        - document: "invoice"
          role: "primary"
          required_fields: ["invoice_number", "vendor_id", "total_amount", "line_items"]
        - document: "purchase_order"
          role: "reference"
          required_fields: ["po_number", "vendor_id", "total_amount", "line_items"]
      
      matching_characteristics:
        vendor_validation:
          field: "vendor_id"
          match_type: "exact"
          comparison: "invoice.vendor_id == purchase_order.vendor_id"
          weight: 1.0
          required: true
        
        po_reference:
          field: "po_number"
          match_type: "exact"
          comparison: "invoice.po_number == purchase_order.po_number"
          weight: 0.9
          required: true
        
        header_amount:
          field: "total_amount"
          match_type: "tolerance"
          comparison: "abs(invoice.total_amount - purchase_order.total_amount)"
          tolerance_type: "percentage"
          tolerance_value: "${config.header_amount_tolerance}"
          weight: 0.8
          required: true
        
        line_items:
          match_type: "line_by_line"
          matching_strategy: "best_fit"
          line_matching_fields:
            - field: "item_code"
              match_type: "exact"
              required: false
            - field: "description"
              required: false
            - field: "quantity"
              required: true
            - field: "unit_price"
              required: true
          aggregation_method: "weighted_average"
          minimum_line_match_score: 0.8
          unmatched_lines_allowed: false
    
    three_way_matching:
      description: "Invoice to Purchase Order to Goods Receipt matching"
      required_documents:
        - document: "invoice"
          role: "primary"
          required_fields: ["invoice_number", "vendor_id", "total_amount", "line_items"]
        - document: "purchase_order"
          role: "reference"
          required_fields: ["po_number", "vendor_id", "ordered_quantity", "line_items"]
        - document: "goods_receipt_note"
          role: "reference"
          required_fields: ["grn_number", "po_number", "received_quantity", "line_items"]
      
      matching_characteristics:
        vendor_validation:
          field: "vendor_id"
          match_type: "exact"
          comparison: "invoice.vendor_id == purchase_order.vendor_id"
          required: true
        
        po_reference_validation:
          field: "po_number"
          match_type: "exact"
          comparison: "invoice.po_number == purchase_order.po_number == goods_receipt_note.po_number"
          required: true
        
        quantity_reconciliation:
          match_type: "three_way_quantity"
          comparisons:
            - name: "ordered_vs_received"
              calculation: "goods_receipt_note.received_quantity <= purchase_order.ordered_quantity"
              required: true
            - name: "invoiced_vs_received"
              calculation: "invoice.quantity == goods_receipt_note.received_quantity"
              tolerance_type: "percentage"
              required: true
            - name: "invoiced_vs_ordered"
              calculation: "invoice.quantity <= purchase_order.ordered_quantity"
              required: true
        
        amount_reconciliation:
          match_type: "calculated"
          calculation: "invoice.line_total == (goods_receipt_note.received_quantity * purchase_order.unit_price)"
          required: true
        
        line_items:
          match_type: "three_way_line"
          matching_sequence:
            - step: 1
              match: "po_lines_to_grn_lines"
              by_field: "item_code"
              create_mapping: true
            - step: 2
              match: "grn_lines_to_invoice_lines"
              use_mapping: true
              by_fields: ["item_code", "description"]
          line_validations:
            - validation: "quantity_consistency"
              rule: "invoice_line.quantity == grn_line.quantity"
            - validation: "price_consistency"
              rule: "invoice_line.unit_price == po_line.unit_price"
            - validation: "amount_calculation"
              rule: "invoice_line.total == (invoice_line.quantity * invoice_line.unit_price)"
          partial_delivery_allowed: true
    
    contract_based_matching:
      description: "Invoice to Contract matching for service providers"
      required_documents:
        - document: "invoice"
          role: "primary"
          required_fields: ["invoice_number", "vendor_id", "total_amount", "service_period"]
        - document: "vendor_contract"
          role: "reference"
          required_fields: ["contract_id", "vendor_id", "contract_value", "payment_schedule"]
      
      matching_characteristics:
        vendor_validation:
          field: "vendor_id"
          match_type: "exact"
          comparison: "invoice.vendor_id == vendor_contract.vendor_id"
          required: true
        
        contract_reference:
          field: "contract_id"
          match_type: "exact"
          comparison: "invoice.contract_ref == vendor_contract.contract_id"
          required: true
        
        service_period_validation:
          match_type: "date_range"
          comparison: "invoice.service_period WITHIN vendor_contract.contract_period"
          required: true
        
        payment_schedule_validation:
          match_type: "schedule"
          validations:
            - check: "milestone_match"
              rule: "invoice.milestone_ref EXISTS IN vendor_contract.payment_milestones"
            - check: "amount_match"
              rule: "invoice.amount == vendor_contract.milestone.amount"
              tolerance_allowed: true
            - check: "cumulative_check"
              rule: "SUM(invoices.amount) <= vendor_contract.total_value"
          required: true
    
    no_po_matching:
      description: "Invoice validation without PO for approved vendors"
      required_documents:
        - document: "invoice"
          role: "primary"
          required_fields: ["invoice_number", "vendor_id", "total_amount"]
        - document: "vendor_master"
          role: "reference"
          required_fields: ["vendor_id", "no_po_allowed", "approval_limit"]
      
      matching_characteristics:
        vendor_validation:
          field: "vendor_id"
          match_type: "exact"
          comparison: "invoice.vendor_id == vendor_master.vendor_id"
          required: true
        
        no_po_authorization:
          match_type: "boolean"
          comparison: "vendor_master.no_po_allowed == true"
          required: true
        
        amount_limit_check:
          match_type: "threshold"
          comparison: "invoice.total_amount <= vendor_master.no_po_limit"
          required: true
        
        expense_category_validation:
          match_type: "lookup"
          comparison: "invoice.expense_category IN vendor_master.allowed_categories"
          required: true

  matching_rules_application:
    rule_selection_logic:
      - condition: "vendor.requires_three_way_match == true"
        apply: "three_way_matching"
      - condition: "vendor.type == 'service_provider' AND vendor.has_contract == true"
        apply: "contract_based_matching"
      - condition: "invoice.po_number != null"
        apply: "two_way_matching"
      - condition: "vendor.no_po_allowed == true AND invoice.amount <= vendor.no_po_limit"
        apply: "no_po_matching"
      - default: "manual_review"

  document_relationships:
    purchase_order_lifecycle:
      states: ["draft", "approved", "partially_received", "fully_received", "closed"]
      valid_for_matching: ["approved", "partially_received"]
      quantity_tracking:
        ordered_quantity: "po.line_items.quantity"
        received_quantity: "SUM(grn.line_items.quantity)"
        invoiced_quantity: "SUM(invoice.line_items.quantity)"
        remaining_quantity: "ordered_quantity - received_quantity"
    
    goods_receipt_validation:
      required_fields: ["grn_number", "po_reference", "received_date", "received_by"]
      date_validation: "grn.received_date >= po.order_date"
      quantity_validation: "grn.total_quantity <= po.remaining_quantity"
    
    invoice_prerequisites:
      for_goods:
        - "purchase_order.status IN ['approved', 'partially_received']"
        - "goods_receipt_note.status == 'posted'"
        - "invoice.date >= goods_receipt_note.date"
      for_services:
        - "contract.status == 'active'"
        - "invoice.service_period <= current_date"
        - "milestone.status == 'completed' (if milestone_based)"

  domain_understanding:
    description: "Business domain knowledge and constraints"
    location: "${external_config.source}/domain_rules.yaml"
    categories:
      duplicate_detection:
        description: "Duplicate invoice detection rules"
        config_ref: "domain_rules.duplicates"
      date_validations:
        description: "Date-related business rules"
        config_ref: "domain_rules.dates"
      amount_validations:
        description: "Amount-related constraints"
        config_ref: "domain_rules.amounts"
      vendor_validations:
        description: "Vendor-specific validations"
        config_ref: "domain_rules.vendors"

  fraud_detection:
    description: "Fraud detection patterns and rules"
    location: "${external_config.source}/fraud_rules.yaml"
    categories:
      pattern_detection:
        description: "Suspicious pattern identification"
        config_ref: "fraud_rules.patterns"
      threshold_monitoring:
        description: "Threshold-based fraud detection"
        config_ref: "fraud_rules.thresholds"
      velocity_checks:
        description: "Transaction velocity monitoring"
        config_ref: "fraud_rules.velocity"
      anomaly_detection:
        description: "ML-based anomaly detection"
        config_ref: "fraud_rules.anomalies"

# Main Execution Plan
execution_plan:
  id: "invoice_validation_v3"
  display_name: "Invoice Validation Workflow"
  description: "Complete invoice validation workflow from intake to approval"
  
  nodes:
    # Node 1: Initialization
    - node:
        id: "initialization"
        display_name: "Initialize Execution"
        type: "start"
        metadata:
          description: "Initialize execution context and retrieve document metadata from metastore"
          agent_instructions: "This is the entry point. Establish complete execution context before proceeding."
          critical: true
        
        can_skip:
          condition: "false"
          requires_approval: false
          reason: "Initialization is mandatory"
        
        node_rules:
          - "Document must exist in metastore"
          - "Vendor must be active in system"
          - "User must have processing permissions"
          - "Execution context must be complete"
        
        acceptance_criteria:
          - "All required fields populated"
          - "Data integrity verified"
          - "Audit trail created"
          - "Schema validation passed"
          - "Execution context initialized with all required fields"
          - "Document metadata retrieved from metastore"
          - "Vendor context validated and loaded"
          - "Initial policies loaded based on context"
          - "External configurations accessible"
        
        execution_plan:
          - process:
              id: "retrieve_metadata"
              display_name: "Retrieve Document Metadata"
              metadata:
                description: "Fetch invoice metadata from metastore and validate completeness"
                agent_instructions: "Query metastore for complete invoice metadata including all related entities"
                retry_on_failure: true
              
              actions:
                - action:
                    id: "fetch_from_metastore"
                    display_name: "Fetch Metadata"
                    type: "data_retrieval"
                    
                    acceptance_criteria:
                      - "Metadata exists in metastore"
                      - "Metadata schema validated"
                      - "All required fields present"
                      - "Data integrity verified"
                    
                    operations:
                      - operation: "query_metastore"
                        context:
                          purpose: "Retrieve complete invoice metadata for processing"
                          data_needed: ["invoice_header", "line_items", "vendor_info", "attachments"]
                          validation_required: true
                          include_history: false
                        params:
                          document_id: "${input.document_id}"
                          include_line_items: true
                          include_vendor_context: true
                          include_attachments: true
                          lock_for_processing: true
                      
                      - operation: "validate_metadata_integrity"
                        context:
                          purpose: "Ensure metadata is complete and valid"
                          validation_level: "strict"
                        params:
                          schema_version: "${metadata.schema_version}"
                          required_fields_check: true
                          checksum_validation: true
                    
                    outputs:
                      success:
                        conditions:
                          - "metadata.status == 'active'"
                          - "metadata.validation_passed == true"
                        data:
                          - "invoice_metadata"
                          - "line_items"
                          - "vendor_context"
                          - "extraction_confidence"
                        next_action: "build_context"
                      partial:
                        conditions:
                          - "metadata.status == 'incomplete'"
                          - "metadata.critical_fields_present == true"
                        data:
                          - "available_metadata"
                          - "missing_fields"
                          - "completion_percentage"
                        requires_review: true
                        next_action: "metadata_completion"
                      failure:
                        error_types:
                          - "document_not_found"
                          - "metadata_corrupted"
                          - "access_denied"
                          - "lock_acquisition_failed"
                        data:
                          - "error_details"
                          - "suggested_actions"
                        next_action: "error_handler"
                      skip:
                        condition: "bypass_initialization == true AND has_override_permission == true"
                        next_node: "validation"

          - process:
              id: "context_building"
              display_name: "Build Execution Context"
              metadata:
                description: "Construct complete execution context with all necessary references"
                agent_instructions: "Aggregate all context data and load applicable policies"
              
              actions:
                - action:
                    id: "build_context"
                    display_name: "Create Execution Context"
                    type: "context_creation"
                    
                    acceptance_criteria:
                      - "All context fields populated"
                      - "Policy references resolved"
                      - "External configs loaded"
                      - "Vendor validation passed"
                    
                    operations:
                      - operation: "create_execution_context"
                        context:
                          purpose: "Establish runtime context for workflow execution"
                          includes_external_data: true
                        params:
                          document_metadata: "${fetch_from_metastore.invoice_metadata}"
                          vendor_data: "${fetch_from_metastore.vendor_context}"
                          org_data: "${system.org_context}"
                          execution_mode: "${input.execution_mode || 'standard'}"
                          priority: "${input.priority || 'normal'}"
                          initiated_by: "${system.current_user}"
                      
                      - operation: "validate_vendor_status"
                        context:
                          purpose: "Ensure vendor is eligible for processing"
                          validation_type: "business_rule"
                        params:
                          vendor_id: "${vendor_context.vendor_id}"
                          check_active_status: true
                          check_block_list: true
                          check_compliance: true
                      
                      - operation: "load_applicable_policies"
                        context:
                          purpose: "Load all policies applicable to this execution"
                          policy_resolution: "hierarchical"
                        params:
                          vendor_category: "${vendor_context.vendor_category}"
                          vendor_tier: "${vendor_context.vendor_tier}"
                          document_type: "${document_metadata.document_type}"
                          invoice_amount: "${invoice_metadata.total_amount}"
                          policy_domains: ["company", "vendor", "accounting", "domain", "fraud"]
                          include_overrides: true
                      
                      - operation: "load_external_configs"
                        context:
                          purpose: "Load frequently changing configuration values"
                          cache_enabled: true
                        params:
                          config_source: "${external_config.source}"
                          required_configs: ["thresholds", "tolerances", "limits"]
                          environment: "${system.environment}"
                    
                    outputs:
                      success:
                        conditions:
                          - "context.complete == true"
                          - "policies.loaded == true"
                          - "vendor.status == 'active'"
                        data:
                          - "execution_context"
                          - "loaded_policies"
                          - "config_values"
                          - "context_id"
                      failure:
                        error_types:
                          - "context_creation_failed"
                          - "vendor_validation_failed"
                          - "policy_load_error"
                          - "config_unavailable"
                        data:
                          - "error_context"
                          - "incomplete_elements" # Havent looked from this forward

    - node:
        id: "validation_and_matching"
        name: "Validation and Matching"
        type: "processing"
        depends_on: ["metadata_extraction"]
        
        acceptance_criteria:
          - "All validation rules applied based on policies"
          - "Matching completed per policy requirements"
          - "Variances calculated and within tolerance"
          - "Results documented for audit trail"
        
        execution_plan:
          - process:
              id: "policy_retrieval"
              name: "Retrieve Validation Policies"
              
              acceptance_criteria:
                - "All applicable policies retrieved"
                - "Policy conflicts resolved"
                - "Policy version tracking maintained"
              
              actions:
                - action:
                    id: "fetch_validation_policies"
                    type: "policy_query"
                    
                    acceptance_criteria:
                      - "Tolerance policies loaded"
                      - "Matching requirements determined"
                      - "Discount eligibility rules available"
                    
                    instructions:
                      - step: "retrieve_tolerance_policies"
                        operation: "query_policy_store"
                        params:
                          policy_namespace: "tenant.policies.company_accounting_payment.tolerance"
                          context:
                            vendor_category: "${sop_context.vendor_context.vendor_category}"
                            invoice_amount: "${metadata.total_amount}"
                            document_type: "${sop_context.document_type}"
                      - step: "retrieve_vendor_specific_policies"
                        operation: "query_policy_store"
                        params:
                          policy_namespace: "tenant.policies.vendor_policies"
                          context:
                            vendor_id: "${metadata.vendor_id}"
                            vendor_tier: "${sop_context.vendor_context.vendor_tier}"
                      - step: "retrieve_discount_policies"
                        operation: "query_policy_store"
                        params:
                          policy_namespace: "tenant.policies.company_accounting_payment.discounts"
                          context:
                            vendor_id: "${metadata.vendor_id}"
                            payment_terms: "${metadata.payment_terms}"
                            preferred_vendor: "${sop_context.vendor_context.preferred_vendor}"
                      - step: "retrieve_bulk_payment_policies"
                        operation: "query_policy_store"
                        params:
                          policy_namespace: "tenant.policies.company_accounting_payment.bulk_payments"
                          context:
                            vendor_id: "${metadata.vendor_id}"
                            invoice_count: "${vendor.pending_invoice_count}"
                      - step: "retrieve_matching_requirements"
                        operation: "query_policy_store"
                        params:
                          policy_namespace: "tenant.policies.sop_policies.matching"
                          context:
                            vendor_category: "${sop_context.vendor_context.vendor_category}"
                            invoice_amount: "${metadata.total_amount}"
                            has_po: "${metadata.po_number != null}"
                            document_type: "${sop_context.document_type}"
                    
                    outputs:
                      success:
                        - "tolerance_policies"
                        - "vendor_policies"
                        - "discount_policies"
                        - "bulk_payment_policies"
                        - "matching_type_required"
                        - "matching_tolerance_policies"
                        - "policy_versions"
                      failure:
                        - "policy_retrieval_errors"
                        - "missing_policies"
                        - "default_policies_applied"

          - process:
              id: "field_validation"
              name: "Validate Invoice Fields"
              
              acceptance_criteria:
                - "All mandatory fields validated"
                - "Tolerance checks completed"
                - "Discount eligibility determined"
                - "Validation results categorized by severity"
              
              actions:
                - action:
                    id: "apply_validation_rules"
                    type: "validation"
                    
                    acceptance_criteria:
                      - "No critical validation failures"
                      - "Warnings documented"
                      - "Business rules satisfied"
                    
                    instructions:
                      - step: "validate_mandatory_fields"
                        operation: "check_required_fields"
                        params:
                          schema: "invoice_metadata"
                          context_schema: "${sop_context.document_type}_requirements"
                          strict_mode: true
                      - step: "validate_amount_tolerances"
                        operation: "apply_tolerance_policies"
                        params:
                          policies: "${tolerance_policies}"
                          amount_fields: ["total_amount", "tax_amount", "line_items_amounts"]
                          vendor_specific_tolerance: "${vendor_policies.tolerance_overrides}"
                      - step: "validate_discount_eligibility"
                        operation: "check_discount_policies"
                        params:
                          policies: "${discount_policies}"
                          payment_terms: "${metadata.payment_terms}"
                          invoice_date: "${metadata.invoice_date}"
                          early_payment_check: true
                      - step: "validate_bulk_payment_eligibility"
                        operation: "check_bulk_policies"
                        params:
                          policies: "${bulk_payment_policies}"
                          vendor_invoices: "${vendor.pending_invoices}"
                          total_amount_threshold: "${bulk_payment_policies.min_total_amount}"
                      - step: "validate_tax_calculations"
                        operation: "verify_tax_amounts"
                        params:
                          tax_rules: "${policy_store.company_accounting_payment.tax_rules}"
                          line_items: "${line_items}"
                          vendor_tax_exempt: "${vendor_policies.tax_exempt_status}"
                      - step: "validate_gl_coding"
                        operation: "verify_gl_accounts"
                        params:
                          line_items: "${line_items}"
                          valid_gl_accounts: "${sop_context.org_data.gl_account_list}"
                          cost_center_mapping: "${sop_context.org_data.cost_center_rules}"
                    
                    outputs:
                      success:
                        - "validation_results"
                        - "validation_summary"
                        - "eligible_discounts"
                        - "bulk_payment_eligible"
                        - "severity_breakdown"
                      failure:
                        - "critical_violations"
                        - "validation_errors"
                        - "policy_breaches"
                      warning:
                        - "validation_warnings"
                        - "override_required"
                        - "manual_review_fields"

          - process:
              id: "document_matching"
              name: "Match Related Documents"
              condition: "${matching_type_required != 'none'}"
              
              acceptance_criteria:
                - "Required documents retrieved"
                - "Matching completed per policy"
                - "Variances within tolerance"
                - "Matching score calculated"
              
              actions:
                - action:
                    id: "retrieve_matching_documents"
                    type: "document_query"
                    
                    acceptance_criteria:
                      - "All required documents found"
                      - "Document versions validated"
                      - "Document relationships verified"
                    
                    instructions:
                      - step: "identify_po_number"
                        operation: "extract_po_reference"
                        params:
                          source_fields: ["po_number", "extracted_text", "line_item_references"]
                          pattern_matching: true
                          fuzzy_matching: true
                      - step: "retrieve_purchase_order"
                        operation: "query_document_store"
                        params:
                          document_type: "purchase_order"
                          po_number: "${extracted_po_number}"
                          vendor_id: "${metadata.vendor_id}"
                          status_filter: ["approved", "partially_received"]
                      - step: "retrieve_goods_receipt"
                        operation: "query_document_store"
                        params:
                          document_type: "goods_receipt_note"
                          po_number: "${extracted_po_number}"
                          vendor_id: "${metadata.vendor_id}"
                          date_range_check: true
                        condition: "${matching_type_required == 'three_way'}"
                      - step: "retrieve_vendor_contract"
                        operation: "query_document_store"
                        params:
                          document_type: "vendor_contract"
                          vendor_id: "${metadata.vendor_id}"
                          active_only: true
                        condition: "${matching_type_required == 'contract_based'}"
                    
                    outputs:
                      success:
                        - "purchase_order_data"
                        - "goods_receipt_data"
                        - "contract_data"
                        - "documents_found"
                        - "document_relationships"
                      failure:
                        - "missing_documents"
                        - "document_retrieval_errors"
                      partial:
                        - "partial_documents"
                        - "incomplete_matching_set"

                - action:
                    id: "perform_matching"
                    type: "matching"
                    
                    acceptance_criteria:
                      - "Matching logic executed per policy"
                      - "Variance calculations accurate"
                      - "Tolerance breaches identified"
                      - "Matching score >= policy minimum"
                    
                    instructions:
                      - step: "two_way_matching"
                        operation: "match_invoice_to_po"
                        params:
                          invoice_data: "${metadata}"
                          po_data: "${purchase_order_data}"
                          tolerance_policies: "${matching_tolerance_policies}"
                          match_fields:
                            - field: "vendor_id"
                              weight: 1.0
                              exact_match: true
                            - field: "total_amount"
                              weight: 0.8
                              tolerance_percent: 5
                            - field: "line_items"
                              weight: 0.9
                              line_level_matching: true
                        condition: "${matching_type_required == 'two_way'}"
                      
                      - step: "three_way_matching"
                        operation: "match_invoice_po_grn"
                        params:
                          invoice_data: "${metadata}"
                          po_data: "${purchase_order_data}"
                          grn_data: "${goods_receipt_data}"
                          tolerance_policies: "${matching_tolerance_policies}"
                          match_fields:
                            - field: "vendor_id"
                              weight: 1.0
                              across_all_docs: true
                            - field: "quantities"
                              weight: 0.9
                              quantity_tolerance_percent: 2
                            - field: "amounts"
                              weight: 0.85
                              amount_tolerance_percent: 3
                            - field: "line_items"
                              weight: 0.9
                              match_by_item_code: true
                        condition: "${matching_type_required == 'three_way'}"
                      
                      - step: "calculate_variances"
                        operation: "compute_match_variances"
                        params:
                          comparison_method: "line_by_line"
                          aggregate_variances: true
                          variance_categories: ["quantity", "price", "amount", "tax"]
                      
                      - step: "apply_tolerance_rules"
                        operation: "check_variance_tolerance"
                        params:
                          variances: "${calculated_variances}"
                          tolerance_policies: "${matching_tolerance_policies}"
                          vendor_specific_tolerance: "${vendor_policies.matching_tolerance}"
                      
                      - step: "calculate_matching_score"
                        operation: "compute_overall_score"
                        params:
                          scoring_method: "weighted_average"
                          include_variance_impact: true
                    
                    outputs:
                      success:
                        - "matching_results"
                        - "variance_details"
                        - "matching_score"
                        - "tolerance_status"
                        - "matched_line_items"
                      failure:
                        - "matching_failures"
                        - "tolerance_breaches"
                        - "unmatched_items"
                      partial:
                        - "partial_match_results"
                        - "items_requiring_review"
                        - "conditional_matches"

    - node:
        id: "review"
        name: "Review"
        type: "human_task"
        depends_on: ["validation_and_matching"]
        
        acceptance_criteria:
          - "Review requirements determined by policy"
          - "Reviewers assigned per workflow type"
          - "Review decisions captured with justification"
          - "SLA compliance maintained"
        
        execution_plan:
          - process:
              id: "review_policy_retrieval"
              name: "Retrieve Review Policies"
              
              acceptance_criteria:
                - "Review necessity determined"
                - "Workflow type identified"
                - "Reviewer roles defined"

          - process:
              id: "reviewer_assignment"
              name: "Assign Reviewers"
              condition: "${review_required == true}"
              
          - process:
              id: "review_execution"
              name: "Execute Review Process"
              condition: "${review_required == true}"
              
              acceptance_criteria:
                - "All reviews completed"
                - "Decisions documented"
                - "Consensus achieved (if required)"
                - "Audit trail complete"

    - node:
        id: "approval"
        name: "Approval"
        type: "approval_workflow"
        depends_on: ["review"]
        
        acceptance_criteria:
          - "Approval matrix correctly applied"
          - "All required approvals obtained"
          - "Delegation rules followed"
          - "Audit trail maintained"
        
        execution_plan:
          - process:
              id: "approval_policy_retrieval"
              name: "Retrieve Approval Policies"
              
              acceptance_criteria:
                - "Approval requirements determined"
                - "Authority levels verified"
                - "Auto-approval eligibility checked"
           
          - process:
              id: "approver_assignment"
              name: "Assign Approvers"
              condition: "${auto_approval_eligible == false}"
              
              acceptance_criteria:
                - "Approvers have required authority"
                - "Approval chain established"
                - "Delegates properly authorized"
              
          - process:
              id: "approval_execution"
              name: "Execute Approval Process"
              
              acceptance_criteria:
                - "Approval obtained per policy"
                - "Conditions documented"
                - "Final status determined"       
